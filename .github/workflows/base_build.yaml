name: Build base DDK container

on:
  workflow_call:
env:
  REGISTRY: ghcr.io/${{ github.repository_owner }}
jobs:
  build:
    name: build containers
    runs-on: ubuntu-24.04
    steps:   
      - name: Set up Podman, OpenShift CLI, and Skopeo
        run: |
          echo "Installing"
          sudo apt-get update
          sudo apt-get install -y podman buildah skopeo
          echo "Installing OpenShift CLI"
          curl -LO "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable/openshift-client-linux-arm64.tar.gz"
          tar -xvf openshift-client-linux-arm64.tar.gz
          sudo mv oc /usr/local/bin/
          sudo mv kubectl /usr/local/bin/
          rm -f openshift-client-linux.tar.gz
      - name: Remove unwanted stuff to free up disk image
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf /opt/hostedtoolcache/CodeQL

          sudo docker image prune --all --force

          sudo swapoff -a
          sudo rm -f /mnt/swapfile

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
# Build Base Image
      - name: Build base Image
        id: build_base_image
        uses: redhat-actions/buildah-build@v2
        with:
          image: base
          tags: 4.18 ${{ github.sha }}
          platforms: linux/amd64, linux/arm64
          oci: true
          layers: true
          containerfiles: ./openshift-images/base/Dockerfile.rhel9
          context: ./openshift-images/base/
          
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push_base_image
        with:
          image: ${{ steps.build_base_image.outputs.image }}
          tags: ${{ steps.build_base_image.outputs.tags }}
          registry: ${{ env.REGISTRY }}

# Build Router Image
      - name: Build router base Image
        id: build_base_router_image
        uses: redhat-actions/buildah-build@v2
        with:
          image: router-base
          tags: 4.18 ${{ github.sha }}
          platforms: linux/amd64, linux/arm64
          oci: true
          layers: true
          containerfiles: ./openshift-router/images/router/base/Dockerfile.ocp
          context: ./openshift-router/
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push_base_router_image
        with:
          image: ${{ steps.build_base_router_image.outputs.image }}
          tags: ${{ steps.build_base_router_image.outputs.tags }}
          registry: ${{ env.REGISTRY }}
# Build OVN Image
      - name: copy ovn-kubernetes git ifno into dir
        run: |
          mkdir ./ovn-kubernetes/gitinfo 
          cp -r .git/modules/ovn-kubernetes/* ./ovn-kubernetes/gitinfo/
      - name: Build OVN Kubernetes Base Image
        id: build_ovn_kubernetes_base_image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ovn-kubernetes-base
          tags: 4.18 ${{ github.sha }}
          platforms: linux/amd64, linux/arm64
          oci: true
          layers: true
          containerfiles: ./ovn-kubernetes/Dockerfile.base
          context: ./ovn-kubernetes/
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push_ovn_kubernetes_base_image
        with:
          image: ${{ steps.build_ovn_kubernetes_base_image.outputs.image }}
          tags: ${{ steps.build_ovn_kubernetes_base_image.outputs.tags }}
          registry: ${{ env.REGISTRY }}

      - name: cleanup
        run: rm -rf ./ovn-kubernetes/gitinfo 
